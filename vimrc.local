let mapleader = ","
set background=dark
set complete=.,b,u,]
set foldmethod=syntax
set gdefault      " Replace all matches on a line instead of just the first
set hlsearch      " highlight search results
set ignorecase    " searches are case-insensitive
set lazyredraw    " Don't redraw the screen during macros
set matchtime=0   " Speed up escape after (){} chars
set nofoldenable
set noshowmode
set nowrap
set scrolloff=0
set synmaxcol=250 " Don't try to highlight lines longer than 250 characters.
set smartcase     " searches are case-sensitive if a capital is in term
set ttimeout      " Fast timeout
set undodir=$HOME/.undodir
set undofile
set wildmenu
set wildmode=longest:full,full
set winwidth=84
set winheight=10
set winminheight=5
set wrap
set tags^=./.git/tags;

let g:ale_emit_conflict_warnings = 0
let NERDTreeShowHidden=1 "show hidden files in NERD

" Stop highlighting if it takes more than a second
" set redrawtime=1000

" Thanks but no thanks
set textwidth=999

let base16colorspace=256
colorscheme base16-default-dark

" Highlight VCS conflict markers
match ErrorMsg '^\(<\|=\|>\)\{7\}\([^=].\+\)\?$'

set colorcolumn=120

highlight Pmenu ctermbg=75 guibg=#2c323c
highlight PmenuSel ctermbg=17 guibg=#3c4452


map <Leader>n :NERDTreeToggle<CR>
nnoremap <cr> :nohlsearch<cr>
map <Leader>co :TComment<CR>

autocmd BufNewFile,BufRead *.tsx set filetype=typescript.jsx
autocmd BufRead,BufNewFile *.md setlocal nospell

au FileType go nmap <leader>r <Plug>(go-run)

hi Normal ctermbg=none
hi NonText ctermbg=none

highlight ALEWarning ctermfg=yellow
highlight ALEError ctermfg=124
let g:ale_sign_error = '✘'
let g:ale_sign_warning = '⚠'
let g:ale_linters = {
\   'javascript': ['flow-language-server', 'eslint','prettier'],
\   'javascript.jsx': ['flow-language-server', 'eslint','prettier'],
\}
let g:ale_fixers = {
      \   'javascript': ['eslint','prettier','importjs'],
      \   'javascript.jsx': ['eslint','prettier','importjs'],
      \   'css': ['prettier'],
      \   'ruby': ['rubocop'],
      \   'markdown': [],
      \}

"let g:ale_fix_on_save = 1
let g:ale_sign_column_always = 1
let g:ale_enabled = 1

let g:prettier#autoformat = 0
autocmd BufWritePre *.js,*.jsx,*.mjs,*.ts,*.tsx,*.css,*.less,*.scss,*.json,*.graphql,*.vue,*.yaml,*.html PrettierAsync

nnoremap <C-p> :FZF<CR>
nnoremap <Leader>t :TestNearest<CR>
nnoremap <Leader>r :TestFile<CR>
noremap <Leader>e :e <C-R>=expand("%:p:h") . '/'<CR>
noremap <Leader>s :split <C-R>=expand("%:p:h") . '/'<CR>
noremap <Leader>v :vnew <C-R>=expand("%:p:h") . '/'<CR>

"function! DockerTransform(cmd)
"  return('cd ~/local_code/convertkit-docker; '.a:cmd)
"endfunction

"let g:test#custom_transformations = {'docker': function('DockerTransform')}
"let g:test#transformation = 'docker'

" Use docker-compose for running specs
" let test#ruby#rspec#executable = './bin/rspec'
" normal-ass setup
let test#ruby#rspec#executable = 'bundle exec rspec'

" kill extra whitespace when saving
let g:strip_whitespace_on_save=1
