#!/usr/bin/env ruby

require 'pstore'

class Brightness
  INITIAL_BRIGHTNESS = 500
  MIN_BRIGHTNESS = 50
  MAX_BRIGHTNESS = 1388
  INCREMENT = 50

  def initialize
    @store = PStore.new("#{ENV['HOME']}/.config/brightness.pstore")
  end

  def load
    set_brightness(within_range(read_brightness))
  end

  def increase
    set_brightness(within_range(read_brightness + INCREMENT))
  end

  def decrease
    set_brightness(within_range(read_brightness - INCREMENT))
  end

  private

  def read_brightness
    @store.transaction(true) do
      return @store[:brightness] || INITIAL_BRIGHTNESS
    end
  end

  def within_range(brightness)
    return MIN_BRIGHTNESS if brightness < MIN_BRIGHTNESS
    return MAX_BRIGHTNESS if brightness > MAX_BRIGHTNESS
    brightness
  end

  def set_brightness(brightness)
    transition_brightness(read_brightness, brightness)
    store_brightness(brightness)
  end

  def transition_brightness(old, new)
    (old > new ? old.downto(new) : (old..new)).each do |n|
      system("echo #{n} > /sys/class/backlight/intel_backlight/brightness")
      sleep 0.0001
    end
  end

  def store_brightness(brightness)
    @store.transaction do
      @store[:brightness] = brightness
    end
  end
end

if ARGV[0] == "dec"
  Brightness.new.decrease
elsif ARGV[0] == "inc"
  Brightness.new.increase
else
  Brightness.new.load
end
